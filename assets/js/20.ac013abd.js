(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{532:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"了解javascript的eventloop机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解javascript的eventloop机制"}},[t._v("#")]),t._v(" 了解Javascript的eventLoop机制")]),t._v(" "),a("ol",[a("li",[a("h3",{attrs:{id:"javascript的eventloop机制概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript的eventloop机制概念"}},[t._v("#")]),t._v(" Javascript的eventLoop机制概念")])])]),t._v(" "),a("p",[t._v("最近刷了几道eventLoop机制的题，await加promise加setTimeOut,每次都觉得对流程理解的差不多了。但是验证时偶尔还会和结果不太一样，说白了还是对每一个语法理解的机理不够深，这次把涉及到的知识点总结一下，留着需要时拿出来看看。")]),t._v(" "),a("h4",{attrs:{id:"为什么会有event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会有event-loop"}},[t._v("#")]),t._v(" 为什么会有event Loop")]),t._v(" "),a("p",[t._v("首先，Javascript是单线程非阻塞的。单线程好理解，因为不可能让两个线程同时操作一个Dom；"),a("br"),t._v("\n非阻塞写过JS代码的人都知道，当程序中有一段异步服务请求时，jS执行到这个地方不会等待请求执行完，而是继续是执行下面的代码，请求执行完会在主线程空闲时再去调用这个异步服务的回调函数。所以Javascript是单线程非阻塞的。")]),t._v(" "),a("h4",{attrs:{id:"_1-2-浏览器的event-loop机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-浏览器的event-loop机制"}},[t._v("#")]),t._v(" 1.2 浏览器的event Loop机制")]),t._v(" "),a("p",[t._v("其实上一节在介绍event Loop的原由时描述的非阻塞场景，就是土话版的event Loop，这里需要换成JS的语言来描述。"),a("br"),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("执行栈：")]),t._v("上述JS代码在初始执行时，同一环境内的所有同步的代码会入栈，代码执行完则会出栈；"),a("br"),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("任务队列：")]),t._v("在同步代码入栈的过程中，可能会遇到异步代码的调用，这些异步代码返回的结果则不会去执行栈，而是进入到一个叫做“任务队列”的queue中。"),a("br"),t._v("\n当环境中检测到所有的同步代码都已出栈，这时才会调用任务队列中的异步任务回调；而异步任务回调时会把此环境下所有的同步代码放到执行栈中，代码执行完出栈；当代码全部执行完，又会去取任务队列中下一个异步任务回调。。。"),a("br"),t._v("\n可以看到，上述过程会不断重复循环，直到执行栈和任务队列中不再有任何一个事件，这个循环过程就是浏览器中的eventLoop机制；"),a("br"),t._v("\n这里为什么强调了是浏览器中的event Loop机制，是因为node.js中有自己的一套event Loop（有自己的Process.nextTick 最优先级异步任务）,但是大致原理是与浏览器这套相同。本篇文章主要总结的是浏览器下的事件循环机制。")],1),t._v(" "),a("h4",{attrs:{id:"_1-3-macrotask-和-microtask-任务和微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-macrotask-和-microtask-任务和微任务"}},[t._v("#")]),t._v(" 1.3 macrotask 和 microtask && 任务和微任务")]),t._v(" "),a("p",[t._v("因为任务队列执行的是先进先出的原则，Javascript其实是不能控制某个事件的优先执行顺序的。那能不能有一种机制让某些任务先执行呢？"),a("br"),t._v("\n这就用到了"),a("font",{attrs:{color:"red"}},[t._v("microtask(微任务)")]),t._v("，于是乎一条任务队列现在变成了两条：微任务队列和任务队列。在这里只需要记住最重要的一条规则："),a("br"),t._v(" "),a("font",{attrs:{color:"red"}},[a("b",[t._v("有微任务永远先执行微任务，微任务的优先级要高于任务。")])]),a("br"),t._v("\n微任务的异步回调有："),a("code",[t._v("Promise, async await, MutationObserver")]),a("br"),t._v("\n任务的异步回调有："),a("code",[t._v("setTimeOut, setInterval, setImmediate, postMessage, I/O, UI交互")]),a("br")],1),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("h3",{attrs:{id:"一些常见异步容易犯错的点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些常见异步容易犯错的点"}},[t._v("#")]),t._v(" 一些常见异步容易犯错的点")])])]),t._v(" "),a("h4",{attrs:{id:"_2-1-promise的执行机理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-promise的执行机理"}},[t._v("#")]),t._v(" 2.1 Promise的执行机理")]),t._v(" "),a("p",[t._v("Promise 主函数内执行的是同步代码，then里面执行的是异步代码，且只有遇到resolve，才会触发then；")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("ul",[a("li",[t._v("因为Promise主函数内是同步代码，所以先执行1")]),t._v(" "),a("li",[t._v("遇到setTimeout,将"),a("code",[t._v("console.log('2')和resolve('3')")]),t._v("放入macrotask中")]),t._v(" "),a("li",[t._v("因为只有遇到resolve，才会触发then，所以同步代码执行完毕，microtask也没有任务入列，则执行macrotask")]),t._v(" "),a("li",[t._v("执行玩"),a("code",[t._v("resolve('3')")]),t._v("将then放入microtask，则执行"),a("code",[t._v("resolve('4')")])]),t._v(" "),a("li",[t._v("遇到setTimeout，放到macrotask，此时microtask没有任务入列，则执行"),a("code",[t._v("console.log('2')")])])]),t._v(" "),a("h4",{attrs:{id:"_2-2-async-await的执行机理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-async-await的执行机理"}},[t._v("#")]),t._v(" 2.2 async await的执行机理")]),t._v(" "),a("p",[t._v("async await其实是Promise的语法糖，只需记住await跟随的语句是同步代码，要入执行栈；后面的代码要进入microtask即可；")])])}),[],!1,null,null,null);s.default=e.exports}}]);